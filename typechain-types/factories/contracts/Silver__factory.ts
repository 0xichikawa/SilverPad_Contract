/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Silver, SilverInterface } from "../../contracts/Silver";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "projectURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimal_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "listerAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "daoAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "fundRaisedAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "softcap_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hardcap_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ico",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundsRaised",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "daoFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "listerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creatorFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FeeDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ico",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refunder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FundsAllRefund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ico",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Invest",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contributors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daoAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distribution",
    outputs: [
      {
        internalType: "bool",
        name: "distributed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "ethdByTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finish",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundRaisedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundsRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getContributorAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContributors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHistory",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributor",
            type: "address",
          },
          {
            internalType: "address",
            name: "investor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Silver.HISTORY[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getICOState",
    outputs: [
      {
        internalType: "enum Silver.ICOState",
        name: "_state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getInvestAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvestors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getTokenAmountForInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hardcap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "history",
    outputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "contributor_",
        type: "address",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "investments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lister",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokenAmountToPurchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minEthAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [
      {
        internalType: "bool",
        name: "refunded",
        type: "bool",
      },
      {
        internalType: "address",
        name: "refunder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "silverToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "softcap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenInfo",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "decimal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eth_",
        type: "uint256",
      },
    ],
    name: "tokensAvailableByEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "tokensByEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensFullyCharged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a080604052346200096257620025bf803803809162000020828562000967565b83398101906101c081830312620009625780516001600160401b03811162000962578262000050918301620009b0565b60208201519091906001600160401b03811162000962578362000075918301620009b0565b604082015190936001600160401b038211620009625762000098918301620009b0565b9260608201519360808301519460a084015195620000b960c0860162000a0b565b620000c760e0870162000a0b565b97620000d7610100880162000a0b565b92620000e7610120890162000a0b565b94620000f76101408a0162000a0b565b966101608a0151986101a06101808c01519b01519b60016000556200013362000121878662000a20565b6200012c8762000a4a565b9062000a59565b604051906001600160401b036060830190811190831117620005d4578d620001f160a460009493846060879601604052602481527f546f74616c546f6b656e56616c75652c20686172646361702d2d2d2d2d2d2d2d6020820152631696969f60e11b604082015260405194859263ca47c4eb60e01b602085015260606024850152620001cf83518094816084880152602088880191016200098b565b60448401526064830152601f8019910116810103608481018452018262000967565b6020815191016a636f6e736f6c652e6c6f675afa508b6200022262000217888762000a20565b6200012c8862000a4a565b1062000912576200026e8e6200023a86151562000a7a565b6200024787151562000a7a565b6200025d6001600160a01b038a16151562000ac7565b6001600160a01b0316151562000ac7565b620002846001600160a01b038916151562000ac7565b6200029a6001600160a01b038a16151562000ac7565b620002b06001600160a01b038b16151562000ac7565b8a15620008c1578b1562000881578a8c11156200083d578c421015620007f857600280546001600160a01b031916331790558051906001600160401b038211620005d457600b5490600182811c92168015620007ed575b6020831014620005b35781601f8493116200077b575b50602090601f8311600114620006ec57600092620006e0575b50508160011b916000199060031b1c191617600b555b8051906001600160401b038211620005d45760105490600182811c92168015620006d5575b6020831014620005b35781601f84931162000674575b50602090601f8311600114620005f657600092620005ea575b50508160011b916000199060031b1c1916176010555b8051906001600160401b038211620005d45760115490600182811c92168015620005c9575b6020831014620005b35781601f8493116200054f575b50602090601f8311600114620004d557600092620004c9575b50508160011b916000199060031b1c1916176011555b601455601255601355601580546001600160a01b03199081166001600160a01b039a8b16908117909255600380548216938b1693909317909255600180548316938a169390931790925560048054821693891693909317909255600580549092169290961691909117905560085560095542600655600755608052604051611a57908162000b08823960805181818161033e015281816103ed015281816114aa015261164f0152f35b0151905038806200040a565b601160009081526000805160206200255f8339815191529350601f198516905b8181106200053657509084600195949392106200051c575b505050811b0160115562000420565b015160001960f88460031b161c191690553880806200050d565b92936020600181928786015181550195019301620004f5565b60116000529091506000805160206200255f833981519152601f840160051c81019160208510620005a8575b90601f859493920160051c01905b818110620005985750620003f1565b6000815584935060010162000589565b90915081906200057b565b634e487b7160e01b600052602260045260246000fd5b91607f1691620003db565b634e487b7160e01b600052604160045260246000fd5b015190503880620003a0565b6010600090815293506000805160206200259f83398151915291905b601f198416851062000658576001945083601f198116106200063e575b505050811b01601055620003b6565b015160001960f88460031b161c191690553880806200062f565b8181015183556020948501946001909301929091019062000612565b60106000529091506000805160206200259f833981519152601f840160051c810160208510620006cd575b90849392915b601f830160051c82018110620006bd57505062000387565b60008155859450600101620006a5565b50806200069f565b91607f169162000371565b01519050388062000336565b600b600090815293507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991905b601f19841685106200075f576001945083601f1981161062000745575b505050811b01600b556200034c565b015160001960f88460031b161c1916905538808062000736565b8181015183556020948501946001909301929091019062000719565b600b6000529091507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9601f840160051c810160208510620007e5575b90849392915b601f830160051c82018110620007d55750506200031d565b60008155859450600101620007bd565b5080620007b7565b91607f169162000307565b60405162461bcd60e51b815260206004820152601460248201527f49434f206973207374696c6c2072756e6e696e670000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602760248201526000805160206200257f8339815191526044820152660736f66746361760cc1b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201526000805160206200257f8339815191526044820152637a65726f60e01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f536f66746361702073686f756c64207365742067726561746572207468616e206044820152637a65726f60e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e7420746f74616c20737570706c79206f6620746f6b60448201526132b760f11b6064820152608490fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620005d457604052565b60005b8381106200099f5750506000910152565b81810151838201526020016200098e565b81601f82011215620009625780516001600160401b038111620005d45760405192620009e7601f8301601f19166020018562000967565b81845260208284010111620009625762000a0891602080850191016200098b565b90565b51906001600160a01b03821682036200096257565b8181029291811591840414171562000a3457565b634e487b7160e01b600052601160045260246000fd5b604d811162000a3457600a0a90565b811562000a64570490565b634e487b7160e01b600052601260045260246000fd5b1562000a8257565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b1562000acf57565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420416464726573737360801b6044820152606490fdfe608060408181526004918236101561001f575b505050361561001d57005b005b600092833560e01c91826302d05d3f14611269575081631069789b14611243578163164500921461121f5781631909d0d5146111db5781632131c68c146111b35781632cdc1c741461118a5781632e51846414610b805781632e659d93146111185781633197cbb6146110f957816335aa0bef14610abb5781633c3610aa146110d55781633cb5d100146110aa5781633d103b9714610bf95781633feb5f2b14610bb857816342e94c9014610b80578163590e1ae314610b3c5781635bed7ef714610b045781635ee58efc14610ac057816360659a9214610abb5781636681b9fd14610a9c57816369a72a6e14610a5f5781636addb663146108775781636e6fb49f1461077c57816378e979251461075d5781638da5cb5b1461073457816396b988621461070c578163a7a38f0b146106a8578163aa15efc81461058e578163ac6d7b6614610550578163af157c19146104ce578163b071cbe6146104af578163b2f5a54c1461041c578163c34fe1dd146103d8578163d56b28891461024657508063f89be59314610228578063f8b28422146101f15763fd572337146101c65780610012565b346101ed57816003193601126101ed5760055490516001600160a01b039091168152602090f35b5080fd5b50346101ed5760203660031901126101ed5760209181906001600160a01b0361021861128e565b168152600e845220549051908152f35b50346101ed57816003193601126101ed576020906008549051908152f35b9050826003193601126103d45761025b61152e565b60075442111561039d5750600a5460085411610281575061027a611591565b6001815580f35b815b600c548110156103005782610297826112fd565b905460039190911b1c6001600160a01b0316808252600e60205283822080549083905590811580156102d0575b50505050600101610283565b83928392839283906102f7575bf1156102ec57823880806102c4565b5051903d90823e3d90fd5b506108fc6102dd565b5060607ffc1b2a311c2a7de088d45026bed67af97341e100fd9069de4468ed5c9b4e1e429161036261033061148f565b6003546001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000061190c565b60016018546101008260a81b033360081b1690828060a81b0319161717601855426019558051903082523360208301524290820152a161027a565b6020606492519162461bcd60e51b8352820152601260248201527124a1a7903737ba1032b73232b2103cb2ba1760711b6044820152fd5b8280fd5b5050346101ed57816003193601126101ed57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8284346104ac57806003193601126104ac578151600c805480835290835260208083019492937fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c792915b82821061048c57610488868661047e828b038361134a565b51918291826113cb565b0390f35b83546001600160a01b031687529586019560019384019390910190610466565b80fd5b5050346101ed57816003193601126101ed576020906009549051908152f35b8284346104ac57806003193601126104ac578151600d805480835290835260208083019492937fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb592915b82821061053057610488868661047e828b038361134a565b83546001600160a01b031687529586019560019384019390910190610518565b8284346104ac5760203660031901126104ac575061058761057660209335601354611410565b610581601254611439565b90611447565b9051908152f35b839150346101ed57816003193601126101ed57601a5467ffffffffffffffff811161069557916020928451906105c9858260051b018361134a565b8082528482019384601a855286852085915b848310610646575050505050845193808501918186525180925285850193925b8281106106085785850386f35b835180516001600160a01b039081168752818401511686840152878101518887015260609081015190860152608090940193928101926001016105fb565b83896001928c9b98999b5161065a81611318565b848060a01b038087541682528587015416838201528d60028701549082015260038601546060820152815201920192019190979594976105db565b634e487b7160e01b835260418252602483fd5b9050346103d45760203660031901126103d4573591601a548310156104ac57506106d36080926113ac565b5080546001820154600283015460039093015484516001600160a01b039384168152919092166020820152928301919091526060820152f35b5050346101ed5760203660031901126101ed5760209181906001600160a01b0361021861128e565b5050346101ed57816003193601126101ed5760025490516001600160a01b039091168152602090f35b5050346101ed57816003193601126101ed576020906006549051908152f35b8284346104ac57806003193601126104ac5781519181600b549260018460011c916001861695861561086d575b602096878510811461085a578899509688969785829a5291826000146108335750506001146107f5575b50505061048892916107e691038561134a565b5192828493845283019061136c565b9190869350600b83528383205b82841061081b57505050820101816107e66104886107d3565b8054848a018601528895508794909301928101610802565b60ff19168782015293151560051b860190930193508492506107e6915061048890506107d3565b634e487b7160e01b835260228a52602483fd5b92607f16926107a9565b8383346101ed57816003193601126101ed57805191806010549460019286841c848816978815610a55575b6020988983108114610a42579189939189938285529081600014610a2457506001146109e7575b506108d69250038661134a565b8351928260115480831c938382169081156109dd575b8a861082146109ca57508487529081156109a8575060011461096d575b5050509361091c8261094996038361134a565b601254601354906109566014549360018060a01b0360155416958751998a9960c08b5260c08b019061136c565b91898303908a015261136c565b948601526060850152608084015260a08301520390f35b969250601187528287205b8288106109955750505061091c8282610949978201019296610909565b8054858901850152968301968101610978565b60ff1916868a0152505050151560051b82018501905061091c82610949610909565b634e487b7160e01b845260229052602483fd5b94607f16946108ec565b6010865283862086925087905b828410610a0d57505050916108d69282010188926108c9565b80548b85018701528a9450928501928891016109f4565b60ff19168486015250899390151560051b83010190506108d66108c9565b634e487b7160e01b865260228552602486fd5b90607f16906108a2565b5050346101ed57816003193601126101ed57602090670de0b6b3a7640000610a94601354610a8e601254611439565b90611410565b049051908152f35b5050346101ed57816003193601126101ed57602090600a549051908152f35b6112a9565b8284346104ac57806003193601126104ac5750601654601754915160ff82161515815260089190911c6001600160a01b031660208201526040810191909152606090f35b8284346104ac5760203660031901126104ac5750610587610b33602093610b2c601254611439565b9035611410565b60135490611447565b8284346104ac57806003193601126104ac5750601854601954915160ff82161515815260089190911c6001600160a01b031660208201526040810191909152606090f35b5050346101ed5760203660031901126101ed5760209181906001600160a01b03610ba861128e565b168152600f845220549051908152f35b9050346103d45760203660031901126103d4573591600c548310156104ac5750610be36020926112fd565b905491519160018060a01b039160031b1c168152f35b9050816003193601126103d4576001600160a01b039181359160248035858116939291908490036110a657610c2c61152e565b610c3461148f565b610c416013549182611410565b90610c526012549261058184611439565b600954101561105257610c7e90610c79610c73610c6d61148f565b94611439565b89611410565b611447565b1161101157600754421015610fe1578415610faf57843410610f74578315610f3357338752602095600e87528388205415610efd575b338852600e8752838820610cc9878254611521565b9055848852600f87528388205415610eb5575b848852600f8752838820610cf1878254611521565b9055853403348111610ea3578890873414908115610e73575b505050835190610d1982611318565b338252878201868152858301908882526060840192428452601a54600160401b811015610e6157806001610d509201601a556113ac565b959095610e50575185546001600160a01b0319908116918316919091178655915160018601805490931691161790555160028301555160039190910155600a54610d9b908690611521565b80600a556009541115610df2575b867f842768b94b018e5aa48731ee69f4550eb378c75290e54507b23e4272ef1ed4c960a08888888880519330855233908501528301526060820152426080820152a16001815580f35b600019420191428311610e3f5750509160a093917f842768b94b018e5aa48731ee69f4550eb378c75290e54507b23e4272ef1ed4c99593600755610e34611591565b919381939550610da9565b634e487b7160e01b88526011905286fd5b634e487b7160e01b8d528c8852868dfd5b634e487b7160e01b8d5260418852868dfd5b8280929181928290610e9a575b3390f115610e9057873880610d0a565b83513d89823e3d90fd5b506108fc610e80565b634e487b7160e01b8952601184528289fd5b600d54600160401b811015610eeb57806001610ed49201600d556112cc565b81549060031b908388831b921b1916179055610cdc565b634e487b7160e01b8952604184528289fd5b600c54600160401b811015610eeb57806001610f1c9201600c556112fd565b81549060031b908333831b921b1916179055610cb4565b601d906020606494519362461bcd60e51b85528401528201527f496e76616c696420636f6e7472696275746f72277320616464726573730000006044820152fd5b6017906020606494519362461bcd60e51b855284015282015276125b9cdd59999a58da595b9d08115d1a08185b5bdd5b9d604a1b6044820152fd5b600e906020606494519362461bcd60e51b85528401528201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152fd5b600c906020606494519362461bcd60e51b85528401528201526b1250d3c81a5cc8195b99195960a21b6044820152fd5b601d906020606494519362461bcd60e51b85528401528201527f496e73756666696369656e7420746f6b656e7320617661696c61626c650000006044820152fd5b845162461bcd60e51b81526020818601526029818501527f546f6b656e732073686f756c6420626520636861726765642066756c6c79206260448201526865666f72652049434f60b81b6064820152608490fd5b8680fd5b9050346103d45760203660031901126103d4573591600d548310156104ac5750610be36020926112cc565b8284346104ac5760203660031901126104ac57506105876020926013549035611447565b5050346101ed57816003193601126101ed576020906007549051908152f35b8383346101ed57816003193601126101ed5760075442101561115c5781905b51918382101561114957602083838152f35b634e487b7160e01b815260218452602490fd5b600a5460095481106111715750600390611137565b600854111561118257600190611137565b600290611137565b5050346101ed57816003193601126101ed5760015490516001600160a01b039091168152602090f35b9050346103d457826003193601126103d4575490516001600160a01b03909116815260209150f35b5050346101ed5760203660031901126101ed5760209161058790610b339083906001600160a01b0361120b61128e565b168152600e86522054610a8e601254611439565b5050346101ed57816003193601126101ed5760209061058760095460135490611447565b5050346101ed57816003193601126101ed57602090611260611467565b90519015158152f35b8490346101ed57816003193601126101ed576003546001600160a01b03168152602090f35b600435906001600160a01b03821682036112a457565b600080fd5b346112a45760003660031901126112a45760206112c461148f565b604051908152f35b600d548110156112e757600d60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b600c548110156112e757600c60005260206000200190600090565b6080810190811067ffffffffffffffff82111761133457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761133457604052565b919082519283825260005b848110611398575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611377565b601a548110156112e757601a60005260206000209060021b0190600090565b602090602060408183019282815285518094520193019160005b8281106113f3575050505090565b83516001600160a01b0316855293810193928101926001016113e5565b8181029291811591840414171561142357565b634e487b7160e01b600052601160045260246000fd5b604d811161142357600a0a90565b8115611451570490565b634e487b7160e01b600052601260045260246000fd5b61147d61057661147561148f565b601354611410565b6009541161148a57600190565b600090565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611515576000916114e6575090565b90506020813d60201161150d575b816115016020938361134a565b810103126112a4575190565b3d91506114f4565b6040513d6000823e3d90fd5b9190820180921161142357565b60026000541461153f576002600055565b604051633ee5aeb560e01b8152600490fd5b3d1561158c573d9067ffffffffffffffff82116113345760405191611580601f8201601f19166020018461134a565b82523d6000602084013e565b606090565b600a54906019820291801592818104601914841715611423576103e88091049360009460018060a01b0395600481808080868c8654165af16115d1611551565b50156118ce57600a8602868104600a148517156118695790858993920494828080808960019e8f54165af1611604611551565b501561187c57605f880290888204605f14171561186957606480910496838080808b89600554165af1611635611551565b5015611825578a9392919083855b611747575b50505050807f0000000000000000000000000000000000000000000000000000000000000000925b6116f0575b505050509060e09392917f8685f6684f1a26e02f6d97f68ab629b105865a82a09efb8d0a47293918edd3a89596601654610100600160a81b033360081b169060018060a81b0319161717601655426017556040519330855233602086015260408501526060840152608083015260a08201524260c0820152a1565b600c54811015611742579089826117398661170c8497966112fd565b90549060031b1c16808552600e602052611732610b336040872054610a8e601254611439565b908661190c565b01909192611670565b611675565b909192939450600d5481101561181d5785611761826112cc565b90549060031b1c16808652600f6020918183526040918289205481810291818304149015171561180a578880809388829404905af161179e611551565b50156117b5575050908b8094939201849594611643565b5162461bcd60e51b815280860191909152602a60248201527f4661696c656420746f2073656e6420636f6e747269627574696f6e20706172746044820152693732b913b9903332b29760b11b81850152608490fd5b634e487b7160e01b895260118852602489fd5b8b9493611648565b60405162461bcd60e51b8152602081850152601f60248201527f4661696c656420746f2073656e642063726561746f7227732066756e64732e006044820152606490fd5b634e487b7160e01b835260118252602483fd5b60405162461bcd60e51b8152602081840152602560248201527f4661696c656420746f2073656e64206c697374696e6720706172746e65722773604482015264103332b29760d91b6064820152608490fd5b60649060206040519162461bcd60e51b835282015260176024820152762330b4b632b2103a379039b2b732102220a7903332b29760491b6044820152fd5b60405163a9059cbb60e01b602082019081526001600160a01b03938416602483015260448083019590955293815292916119669161194985611318565b1692600080938192519082875af161195f611551565b90846119be565b908151918215159283611996575b50505061197e5750565b60249060405190635274afe760e01b82526004820152fd5b8192935090602091810103126101ed5760200151908115918215036104ac5750388080611974565b906119e557508051156119d357805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611a18575b6119f6575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b156119ee56fea26469706673582212200f47b1d2ed3247b7c96bad1e8fd94d02f181394fabf3385cc13b053f9191a35a64736f6c6343000818003331ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68486172646361702073686f756c64207365742067726561746572207468616e201b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672";

type SilverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SilverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Silver__factory extends ContractFactory {
  constructor(...args: SilverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    projectURI_: string,
    name_: string,
    symbol_: string,
    totalSupply_: BigNumberish,
    decimal_: BigNumberish,
    price_: BigNumberish,
    creator_: AddressLike,
    tokenAddress_: AddressLike,
    listerAddress_: AddressLike,
    daoAddress_: AddressLike,
    fundRaisedAddress_: AddressLike,
    softcap_: BigNumberish,
    hardcap_: BigNumberish,
    endTime_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      projectURI_,
      name_,
      symbol_,
      totalSupply_,
      decimal_,
      price_,
      creator_,
      tokenAddress_,
      listerAddress_,
      daoAddress_,
      fundRaisedAddress_,
      softcap_,
      hardcap_,
      endTime_,
      overrides || {}
    );
  }
  override deploy(
    projectURI_: string,
    name_: string,
    symbol_: string,
    totalSupply_: BigNumberish,
    decimal_: BigNumberish,
    price_: BigNumberish,
    creator_: AddressLike,
    tokenAddress_: AddressLike,
    listerAddress_: AddressLike,
    daoAddress_: AddressLike,
    fundRaisedAddress_: AddressLike,
    softcap_: BigNumberish,
    hardcap_: BigNumberish,
    endTime_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      projectURI_,
      name_,
      symbol_,
      totalSupply_,
      decimal_,
      price_,
      creator_,
      tokenAddress_,
      listerAddress_,
      daoAddress_,
      fundRaisedAddress_,
      softcap_,
      hardcap_,
      endTime_,
      overrides || {}
    ) as Promise<
      Silver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Silver__factory {
    return super.connect(runner) as Silver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SilverInterface {
    return new Interface(_abi) as SilverInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Silver {
    return new Contract(address, _abi, runner) as unknown as Silver;
  }
}
